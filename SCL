//**********************************************************************************************************************************
//
// PROJECT:							Storage Class Library
// FILE:                SCL
// SUBSYSTEM:						Common Include file for the storage class library.
// LANGUAGE:						C++
// TARGET OS:						None.
// LIBRARY DEPENDANCE:	GCL, MCL.
// NAMESPACE:						SCL
// AUTHOR:							Gavin Blakeman (GGB).
// LICENSE:             GPLv2
//
//                      Copyright 2010, 2013-2025 Gavin Blakeman.
//                      This file is part of the Storage Class Library (SCL)
//
//                      SCL is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
//                      License as published by the Free Software Foundation, either version 2 of the License, or (at your option)
//                      any later version.
//
//                      SCL is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
//                      warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
//                      more details.
//
//                      You should have received a copy of the GNU General Public License along with SCL.  If not,
//                      see <http://www.gnu.org/licenses/>.
//
// OVERVIEW:
//
// HISTORY:             2020-09-04 GGB - Updated vector_sorted to full STL compliance.
//                      2020-02-16 GGB - Added vector2D and index2D for use with warGame.wt
//                      2015-09-22 GGB - astroManager 2015.09 release
//
//**********************************************************************************************************************************

#ifndef SCL_H
#define SCL_H

/*!
 * @mainpage Storage Class Library (SCL).
 * @section Introduction
 * The Storage Class Library implements a number of classes that have been developed as storage classes.<br>
 * The library is written in C++20.<br>
 * The library is written as an operating system independent library.<br>
 *
 * @section Containers
 * A number of STL-like containers are provided. Some of these are extensions to the STL offering tailored features that are not
 * available in the STL.
 *
 *                      123456789   123456789   123456789
 * Container Name     | Insertion |  Removal  |  Search   | Comments
 * ------------------ | :-------: | :------:  | :-------: |
 * vector             | 1         | O(n)      | O(n)      | STL container
 * map                | O(log n)  | O(log n)  | O(log n)  | STL container
 * mapAsVector        | O(n)      | O(n)      | O(log N)  | Fast traversal.
 * set                | O(log n)  | O(log n)  | O(log n)  | STL container
 * vector_sorted      | O(n)      | O(n)      | O(log n)  | Efficient storage, fast transversal.
 * multiVector_sorted | O(n)      | O(n)      | O(log n)  | Fast traversal
 * bimap              | O(log n)  |           | O(log n)  | Bi-directional connection. Two keys.
 *
 *
 * @section Dependencies
 * The following open source libraries are required by the Storage Class library.
 * @arg Boost Library <a href="http//www.boost.org">Boost C++ Libraries</a>
 * @arg GCL <a href="http://https://github.com/gavin-blakeman/GCL">General Class Library</a>
 * @arg MCL <a href="http://https://github.com/gavin-blakeman/MCL">Math Class Library</a>
 *
 * @section Compilation Control
 * The following macros control how the code will be compiled for various applications.
 * @li @b SCL_NOMT - Do not use multi-threading. This should only be used on platforms where multi-threading is not available. By
 *									 default, multi-threading support is enabled. If multi-threading is available, the library will use all
 *                   available processors (1 thread = 1 processor) to perform multi-threaded concurrent operations.
 *
 * @section Projects
 * The Storage Class Library is used as the Astronomy Library by the following projects.
 * @li Astronomical Image Reduction and Data Analysis Software.  (<a href="http://www.astroManager.net">astroManager</a>)

 *
 * @section Development
 * The library is still under active development and is being expanded and improved.
 * @par Note
 * The classes within this library have been in development from 2005. As a result, all the code is not written using the
 * C++20 functionality. There is an opportunity to "clean" up the code by updating the code to reflect the C++20 standard.
 * All new code that is being developed is written to the C++20 standard.<br>
 * Any C string functions will be phased out over time. Any new code should not include C string functions, but should rather use
 * the C++ std::string classes.
 * @par Reporting Bugs
 *
 * @par Source Code
 *
 * @section Legal
 * @author Gavin Blakeman (GGB)
 * @version 2023.11
 * @copyright 2005-2024 Gavin Blakeman
 * @par Licence
 * The Storage Class Library is licensed under the GPLv2. The full text of the GPLv2 can be found in the file license.txt that
 * is distributed with the source of the library.<br>
 * The Storage Class Library is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later version.<br>
 * The Storage Class Library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.<br>
 * You should have received a copy of the GNU General Public License along with the Astronomy Class Library.  If not, see
 * <a href="http://www.gnu.org/licenses/">The GNU Project</a>
 */

#include "include/bimap.hpp"
#include "include/circularBuffer.hpp"
 
#ifdef __EMBEDDED__
#else
#include "include/array2D.hpp"

#include "include/circular_biBuffer.hpp"
#include "include/common.h"
#include "include/config.h"
#include "include/hierarchyBuilder.hpp"
#include "include/mapAsVector.hpp"
#include "include/multiVectorSorted.hpp"
#include "include/index2D.hpp"
#include "include/sparseArray.hpp"
#include "include/stackHierarchy.hpp"
#include "include/trimap.hpp"
#include "include/vector2D.hpp"
#include "include/vectorSorted.hpp"
#include "include/sortedHierarchyBuilder.hpp"
#endif
#endif // SCL_H
